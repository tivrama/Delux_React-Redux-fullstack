// import React, { Component } from 'react';
// import { connect } from 'react-redux';
// import { meFromToken, meFromTokenSuccess, meFromTokenFailure, resetToken } from '../actions/auth.js';
// import App from '../components/app.js';

// const mapDispatchToProps = (dispatch) => {
//   return {
//     loadUserFromToken: () => {
//       let token = localStorage.getItem('jwtToken');
//       if (!token || token === '') {
//         return;  //if there is no token, dont bother
//       }

//       //fetch user from token (if server deems it's valid token)
//       dispatch(meFromToken(token))
//       .then((response) => {
//         if (!response.error) {
//           //reset token (possibly new token that was regenerated by the server)
//           localStorage.setItem('jwtToken', response.payload.data.token);
//           dispatch(meFromTokenSuccess(response.payload));
//         } else {
//           localStorage.removeItem('jwtToken'); //remove token from storage
//           dispatch(meFromTokenFailure(response.payload));
//         }
//       });
//     },
//     resetMe: () => {
//       localStorage.removeItem('jwtToken'); //remove token from storage
//       dispatch(resetToken());
//     }
//   };
// }

// export default connect(null, mapDispatchToProps)(App);
